############################################################ DEV ############################################################
quarkus.http.port=8080

# Configuring the outgoing channel (writing to Kafka)
mp.messaging.outgoing.payment-out.connector=smallrye-kafka
mp.messaging.outgoing.payment-out.topic=payment
mp.messaging.outgoing.payment-out.key.serializer=org.apache.kafka.common.serialization.LongSerializer
mp.messaging.outgoing.payment-out.value.serializer=org.apache.kafka.common.serialization.StringSerializer

# Configuring the incoming channel (reading from Kafka)
mp.messaging.incoming.order-in.connector=smallrye-kafka
mp.messaging.incoming.order-in.topic=order-update
mp.messaging.incoming.order-in.key.deserializer=org.apache.kafka.common.serialization.LongDeserializer
mp.messaging.incoming.order-in.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer


# DB config
#H2 DEV
#quarkus.datasource.db-kind=h2
#quarkus.datasource.jdbc.url=jdbc:h2:mem:default;DB_CLOSE_DELAY=-1;INIT=RUNSCRIPT FROM 'classpath:import.sql'
#quarkus.hibernate-orm.dialect=org.hibernate.dialect.H2Dialect
#quarkus.hibernate-orm.log.sql=true
#quarkus.hibernate-orm.database.generation=drop-and-create

# POSTGRES DEV
quarkus.datasource.db-kind=postgresql
quarkus.datasource.username=shopping_user
quarkus.datasource.password=shopping_pass
quarkus.datasource.jdbc.url=jdbc:postgresql://localhost/shopping
quarkus.hibernate-orm.log.sql=true
#quarkus.hibernate-orm.sql-load-script=import-postgres.sql
#quarkus.hibernate-orm.database.generation=drop-and-create


############################################################ PROD ############################################################
# Configuring the outgoing channel (writing to Kafka)
%prod.mp.messaging.outgoing.payment-out.connector=smallrye-kafka
%prod.mp.messaging.outgoing.payment-out.topic=payment
%prod.mp.messaging.outgoing.payment-out.key.serializer=org.apache.kafka.common.serialization.LongSerializer
%prod.mp.messaging.outgoing.payment-out.value.serializer=org.apache.kafka.common.serialization.StringSerializer

# Configuring the incoming channel (reading from Kafka)
%prod.mp.messaging.incoming.order-in.connector=smallrye-kafka
%prod.mp.messaging.incoming.order-in.topic=order-update
%prod.mp.messaging.incoming.order-in.key.deserializer=org.apache.kafka.common.serialization.LongDeserializer
%prod.mp.messaging.incoming.order-in.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer

# DB config
%prod.quarkus.datasource.db-kind=postgresql
%prod.quarkus.datasource.username=shopping_user
%prod.quarkus.datasource.password=shopping_pass
%prod.quarkus.datasource.jdbc.url=jdbc:postgresql://localhost/shopping
%prod.quarkus.hibernate-orm.log.sql=true
%prod.quarkus.hibernate-orm.sql-load-script=import-postgres.sql
%prod.quarkus.hibernate-orm.database.generation=drop-and-create

############################################################ TEST ############################################################
# DB config
#%test.quarkus.datasource.db-kind=h2
#%test.quarkus.datasource.jdbc.url=jdbc:h2:mem:default;DB_CLOSE_DELAY=-1;INIT=RUNSCRIPT FROM 'classpath:import.sql'
#%test.quarkus.hibernate-orm.dialect=org.hibernate.dialect.H2Dialect
#%test.quarkus.hibernate-orm.log.sql=true
#
## Configuring the incoming channel (reading from Kafka)
#%test.mp.messaging.incoming.order-in.connector=smallrye-in-memory
#%test.mp.messaging.incoming.order-in.topic=order-update
#%test.mp.messaging.incoming.order-in.key.deserializer=org.apache.kafka.common.serialization.LongDeserializer
#%test.mp.messaging.incoming.order-in.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer
#
#%test.mp.messaging.outgoing.payment-out.connector=smallrye-in-memory
#%test.mp.messaging.outgoing.payment-out.topic=payment
#%test.mp.messaging.outgoing.payment-out.key.serializer=org.apache.kafka.common.serialization.LongSerializer
#%test.mp.messaging.outgoing.payment-out.value.serializer=org.apache.kafka.common.serialization.StringSerializer