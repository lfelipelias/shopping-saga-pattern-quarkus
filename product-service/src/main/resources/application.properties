quarkus.http.port=8082

# Configuring the incoming channel (reading from Kafka)
mp.messaging.incoming.product-in.connector=smallrye-kafka
mp.messaging.incoming.product-in.topic=product
mp.messaging.incoming.product-in.key.deserializer=org.apache.kafka.common.serialization.LongDeserializer
mp.messaging.incoming.product-in.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer

# Configuring the outgoing channel (writing to Kafka)
mp.messaging.outgoing.order-out.connector=smallrye-kafka
mp.messaging.outgoing.order-out.topic=order-update
mp.messaging.outgoing.order-out.key.serializer=org.apache.kafka.common.serialization.LongSerializer
mp.messaging.outgoing.order-out.value.serializer=org.apache.kafka.common.serialization.StringSerializer


# Configuring compensation
mp.messaging.outgoing.payment-out.connector=smallrye-kafka
mp.messaging.outgoing.payment-out.topic=payment-update
mp.messaging.outgoing.payment-out.key.serializer=org.apache.kafka.common.serialization.LongSerializer
mp.messaging.outgoing.payment-out.value.serializer=org.apache.kafka.common.serialization.StringSerializer

# DB config
quarkus.datasource.db-kind=h2
quarkus.datasource.jdbc.url=jdbc:h2:mem:default;DB_CLOSE_DELAY=-1;INIT=RUNSCRIPT FROM 'classpath:import.sql'
quarkus.hibernate-orm.dialect=org.hibernate.dialect.H2Dialect
quarkus.hibernate-orm.log.sql=true
#quarkus.hibernate-orm.database.generation=drop-and-create